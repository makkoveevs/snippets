{
  // Place your Рабочая область arctic-frontend snippets here. Each snippet is defined under a 
snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in 
the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what 
is
  // used to trigger the snippet and the body will be expanded and inserted. Possible 
variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for 
placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Index file with reexport component": {
    "prefix": "eee",
    "body": ["export { $1 } from './$1';"],
    "description": "Index file with reexport component"
  },
  "Index file with reexport as default component": {
    "prefix": "eeed",
    "body": ["export { $1 as default } from './$1';"],
    "description": "Index file with reexport component"
  },
  "React FC by Filename": {
    "prefix": "rrr",
    "body": [
      "import React from 'react';",
      "",
      "interface I${TM_FILENAME/(.tsx)//gi}Props {",
      "}",
      "",
      "export const ${TM_FILENAME/(.tsx)//gi}:React.FC<I${TM_FILENAME/(.tsx)//gi}Props> = ({}) 
=> {",
      "  return <div>$0</div>",
      "};"
    ],
    "description": "React FC"
  },
  "React FC by Filename without props": {
    "prefix": "rrrw",
    "body": [
      "import {FC} from 'react';",
      "",
      "export const ${TM_FILENAME/(.tsx)//gi}:FC = () => (",
      "  <div>$0</div>",
      ");"
    ],
    "description": "React FC without props"
  },
  "React FC returns JSX.ELEMENT without props and children": {
    "prefix": "jjj",
    "body": [
      "export const ${TM_FILENAME/(.tsx)//gi} = ():JSX.Element => (",
      "  <div>$0</div>",
      ");"
    ],
    "description": "React FC without props and children returns JSX.Element"
  },
  "Observer React FC returns JSX.ELEMENT without props and children": {
    "prefix": "jjjo",
    "body": [
      "import { observer } from 'mobx-react-lite';",
      "",
      "export const ${TM_FILENAME/(.tsx)//gi} = observer(():JSX.Element => {",
      "  return (<div>$0</div>)",
      "});"
    ],
    "description": "React FC without props and children returns JSX.Element"
  },
  "React FC returns JSX.ELEMENT with props but without children": {
    "prefix": "jjjp",
    "body": [
      "export interface I${TM_FILENAME/(.tsx)//gi}Props {",
      "}",
      "",
      "export const ${TM_FILENAME/(.tsx)//gi} = 
({}:I${TM_FILENAME/(.tsx)//gi}Props):JSX.Element => {",
      "  return <div>$0</div>",
      "};"
    ],
    "description": "React FC with props but without children returns JSX.Element"
  },
  "React FC returns JSX.ELEMENT with props and children": {
    "prefix": "jjjpc",
    "body": [
      "import {PropsWithChildren} from 'react';",
      "",
      "interface I${TM_FILENAME/(.tsx)//gi}Props {",
      "}",
      "",
      "export const ${TM_FILENAME/(.tsx)//gi} = 
({}:PropsWithChildren<I${TM_FILENAME/(.tsx)//gi}Props>):JSX.Element => {",
      "  return <div>$0</div>",
      "};"
    ],
    "description": "React FC with props and children returns JSX.Element"
  },
  "Create object key:value pair": {
    "prefix": "ok",
    "body": ["'$1':'$2',"],
    "description": "Create object key:value pair"
  }
}

